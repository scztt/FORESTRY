{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 BitstreamVeraSansMono-Roman;}
{\colortbl;\red255\green255\blue255;\red128\green0\blue0;\red102\green0\blue102;\red0\green0\blue179;
\red179\green0\blue179;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf0 		if( ~thisP[\cf2 \\origY\cf0 ].isNegative != ~actualNextP[\cf2 \\origY\cf0 ].isNegative, \{\
			\cf3 "path a"\cf0 .postln;\
			if( ~thisP[\cf2 \\origY\cf0 ].isNegative, \{\
				startTheta = relTheta + \
							( \
								multA *  \
								acos( ~thisP[\cf2 \\radius\cf0 ] / \
									( ~thisP[\cf2 \\radius\cf0 ] / radSum * dist)\
								)\
							);\
				startPosition = ~thisP[\cf2 \\pos\cf0 ] + \cf4 Polar\cf0 (~thisP[\cf2 \\radius\cf0 ], startTheta).asPoint;\
			\},\{\
				startTheta = relTheta -\
						acos( (~thisP[\cf2 \\radius\cf0 ] - ~actualNextP[\cf2 \\radius\cf0 ]).abs / dist );\
				startPosition = ~thisP[\cf2 \\pos\cf0 ] + \cf4 Polar\cf0 (~thisP[\cf2 \\radius\cf0 ], startTheta).asPoint;\
			\});\
			\
			if( ~actualNextP[\cf2 \\origY\cf0 ].isNegative, \{\
				endTheta = (relTheta + pi) + \
							( \
								multB * \
								acos( ~actualNextP[\cf2 \\radius\cf0 ] / \
									( ~actualNextP[\cf2 \\radius\cf0 ] / radSum * dist)\
								)\
							);	\
				endPosition = ~actualNextP[\cf2 \\pos\cf0 ] + \cf4 Polar\cf0 (~actualNextP[\cf2 \\radius\cf0 ], endTheta).asPoint;\
			\},\{\
				endTheta = startTheta;\
				endPosition = ~actualNextP[\cf2 \\pos\cf0 ] + \cf4 Polar\cf0 (~actualNextP[\cf2 \\radius\cf0 ], endTheta).asPoint;\
			\});\
			\
			thisTheta = (endPosition - startPosition).theta;\
	\
			if(lastTheta.notNil, \{\
				isContacting = lastTheta.diffCircle(thisTheta) >= \cf5 0\cf0 ;\
				isContacting = \cf4 true\cf0 ;\
			\})\
		\},\{\
			\cf3 "path b"\cf0 .postln;\
			if (~thisP[\cf2 \\radius\cf0 ] > ~actualNextP[\cf2 \\radius\cf0 ], \{\
				startTheta = relTheta -\
						acos( (~thisP[\cf2 \\radius\cf0 ] - ~actualNextP[\cf2 \\radius\cf0 ]).abs / dist );\
				startPosition = ~thisP[\cf2 \\pos\cf0 ] + \cf4 Polar\cf0 (~thisP[\cf2 \\radius\cf0 ], startTheta).asPoint;\
		\
				endTheta = startTheta;\
				endPosition = ~actualNextP[\cf2 \\pos\cf0 ] + \cf4 Polar\cf0 (~actualNextP[\cf2 \\radius\cf0 ], endTheta).asPoint;\
			\}, \{\
				startTheta = (relTheta + pi) +\
						acos( (~thisP[\cf2 \\radius\cf0 ] - ~actualNextP[\cf2 \\radius\cf0 ]).abs / dist );\
				startPosition = ~thisP[\cf2 \\pos\cf0 ] + \cf4 Polar\cf0 (~thisP[\cf2 \\radius\cf0 ], startTheta).asPoint;\
		\
				endTheta = startTheta;\
				endPosition = ~actualNextP[\cf2 \\pos\cf0 ] + \cf4 Polar\cf0 (~actualNextP[\cf2 \\radius\cf0 ], endTheta).asPoint;\
			\});		\
			\
			thisTheta = (endPosition - startPosition).theta;\
			if(lastTheta.notNil, \{\
				isContacting = lastTheta.diffCircle(thisTheta) <= \cf5 0\cf0 ;\
				isContacting = \cf4 true\cf0 ;\
			\})\
		\});\
}