{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 LiberationMono;}
{\colortbl;\red255\green255\blue255;\red0\green102\blue0;\red0\green0\blue0;\red77\green77\blue77;
\red0\green0\blue178;\red128\green0\blue0;\red0\green0\blue255;\red178\green0\blue178;\red77\green77\blue77;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc

\f0\fs30 \cf2 // . . . F O R E S T R Y . . . //\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc

\fs24 \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 /* Not used\
	s = Server.internal.boot;\
	p = DualEnvir.all;\
*/\cf3 \
\
 \cf2 // Execute one time\cf3 \
\cf4 (\cf3 \
	\cf5 DualEnvir\cf4 .\cf3 new\cf4 (\cf3 s\cf4 ,\cf3  \cf6 \\musdash\cf4 );\cf3 \
	p\cf4 [\cf6 \\musdash\cf4 ].\cf3 linkDoc\cf4 ;\cf3 \
\cf4 )\cf3 \
\
\cf5 SynthDef\cf4 (\cf6 \\arc\cf4 ,\cf3  \cf4 \{\cf3 \
	\cf7 | freq = 400, dur, filt = 0.2 |\cf3 \
	\cf7 var\cf3  counterEnv\cf4 ,\cf3  fEnv\cf4 ,\cf3  ampMod\cf4 ,\cf3  freqs\cf4 ,\cf3  amps\cf4 ,\cf3  amp\cf4 ,\cf3  sig, filtScale\cf4 ;\cf3 \
	\
	counterEnv = \cf5 Line\cf4 .\cf3 kr\cf4 (\cf8 0\cf4 ,\cf3  \cf8 1\cf4 ,\cf3  dur\cf4 );\cf3 \
	fEnv = \cf5 Env\cf4 ([\cf8 0.0001\cf4 ,\cf3  \cf8 0.7\cf4 ,\cf3  \cf8 0.95\cf4 ,\cf3  \cf8 0.8\cf4 ,\cf3  \cf8 0.5\cf4 ,\cf3  \cf8 0.4\cf4 ,\cf3  \cf8 0.3\cf4 ,\cf3  \cf8 0.45\cf4 ,\cf3  \cf8 0.1\cf4 ,\cf3  \cf8 0.001\cf4 ],\cf3  \cf8 0.1\cf3 !\cf8 9\cf4 ,\cf3  \cf6 \\exp\cf4 );\cf3 \
	ampMod = \cf5 EnvGen\cf4 .\cf3 kr\cf4 (\cf5 Env\cf4 ([\cf8 0\cf4 ,\cf3  \cf8 1\cf4 ,\cf3  \cf8 0\cf4 ],\cf3  \cf4 [\cf8 0.5\cf4 ,\cf3  \cf8 0.5\cf4 ],\cf3  \cf6 \\sin\cf4 ),\cf3  \
		timeScale: dur\cf4 );\cf3 \
	\
	freqs = freq * \cf4 (\cf8 1\cf4 ..\cf8 9\cf4 );\cf3 \
	freqs = freqs\cf4 .\cf3 collect\cf4 (\{\cf3 \
		\cf7 | f |\cf3 \
		\cf4 [\cf3 f\cf4 ,\cf3  f + \cf8 5.0\cf4 .\cf3 rand\cf4 ,\cf3  f - \cf8 5.0\cf4 .\cf3 rand\cf4 ];\cf3 \
	\cf4 \}).\cf3 flatten.postln\cf4 ;\cf3 \
	\
	amps = freqs\cf4 .\cf3 collect\cf4 (\{\cf3 \
		\cf7 | f, i |\cf3 \
		\cf7 var\cf3  fs = freqs\cf4 .\cf3 size\cf4 ;\
		amp = ampMod * \cf9 (\cf0 i / fs\cf9 )\cf3 \
		amp = amp + \cf4 (\cf3 ampMod * \cf8 0.01 \cf3 * \cf5 LFNoise2\cf4 .\cf3 kr\cf4 (\cf8 3\cf4 ));\cf3 \
		amp = amp * \cf4 (\cf8 1 \cf3 - \cf4 (\cf3 i / fs\cf4 ));\cf3 \
		\cf5 IEnvGen\cf4 .\cf3 kr\cf4 (\cf3 fEnv\cf4 ,\cf3  ampMod\cf4 );\cf3 \
	\cf4 \});\cf3 \
	\
	filtScale = 2**(filt*3);\
	sig = \cf5 LFSaw\cf4 .\cf3 ar\cf4 (\cf3 freqs\cf4 ,\cf3  \cf8 0\cf4 ,\cf3  amps\cf4 );\cf3 \
	sig = \cf5 LPF\cf4 .\cf3 ar\cf4 (\cf3 sig\cf4 ,\cf3  freqs * \cf0 filtScale\cf4 );\cf3 \
	sig = \cf5 Mix\cf4 (\cf3 sig * \cf8 0.05\cf4 );\cf3 \
	\cf5 Out\cf4 .\cf3 ar\cf4 ([\cf8 0\cf4 ,\cf8 1\cf4 ],\cf3  sig\cf4 );\cf3 \
\cf4 \}).\cf3 add\cf4 ;\cf3 \
\
\cf5 Synth\cf4 (\cf6 \\arc\cf4 ,\cf3  args: \cf4 [\cf3 \
	\cf6 \\dur\cf4 ,\cf3  \cf8 20\cf4 ,\cf3  \
	\cf6 \\freq\cf4 ,\cf3  3\cf8 90,\
	\\filt, -0.5\cf3 \
\cf4 ]);}