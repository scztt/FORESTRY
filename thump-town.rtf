{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 DejaVuSansMono;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red77\green77\blue77;\red0\green0\blue179;
\red102\green0\blue102;\red179\green0\blue179;\red51\green51\blue191;\red0\green0\blue255;\red128\green0\blue0;
\red77\green77\blue77;\red128\green0\blue0;\red0\green0\blue179;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf2 s\cf3 .\cf2 reboot\cf3 ;\cf2 \
b = \cf4 Buffer\cf3 .\cf2 read\cf3 (\cf2 s\cf3 ,\cf2  \cf5 "/Users/scott/Documents/_sounds/barn-owl-drone-1.wav"\cf3 );\cf2 \
\
n = \cf4 NodeProxy\cf3 .\cf2 audio\cf3 (\cf2 s\cf3 ,\cf6 2\cf3 );\cf2 \
n\cf3 .\cf2 play\cf3 ;\cf2 \
\
k = \cf4 KorgControl\cf3 (\cf2  s \cf3 )\cf2 \
k\cf3 .\cf2 start\cf3 ()\cf2 \
\
k\cf3 .\cf2 debugScope\
k\cf3 .\cf2 debugMode = \cf7 false\cf3 ;\cf2 \
\
n\cf3 .\cf2 clear\cf3 ;\cf2 \
\
n\cf3 .\cf2 source = \cf3 \{\cf2 \
	\cf8 | out = 0, ampSmooth=0.1, fWidth = 0.5, fMult = 1, trig=0 |\cf2 \
	\cf8 var\cf2  sig\cf3 ,\cf2  amp\cf3 ,\cf2 \
		filterFreqs\cf3 ,\cf2  filteredSig\cf3 ,\cf2  amount\cf3 ,\cf2  rq\cf3 ,\cf2  fade\cf3 ,\cf2 \
		filteredSigAmp\cf3 ,\cf2 \
		noiseAddition\cf3 ;\cf2 \
	\
	filterFreqs = \cf3 [\cf6 10\cf3 ,\cf2  \cf6 30\cf3 ,\cf2  \cf6 50\cf3 ,\cf2  \cf6 70\cf3 ,\cf2  \cf6 90\cf3 ,\cf2  \cf6 110\cf3 ,\cf2  \cf6 130\cf3 ,\cf2  \cf6 140\cf3 ]\cf2  * fMult\cf3 ;\cf2 \
		\
	amount = \cf4 EnvGen\cf3 .\cf2 kr\cf3 (\cf4 Env\cf3 .\cf2 perc\cf3 (),\cf2  \
		gate: \cf4 Impulse\cf3 .\cf2 kr\cf3 (\cf6 0.6\cf3 ),\cf2 \
		levelScale: fWidth\cf3 ,\cf2 \
		timeScale: \cf6 0.8\cf2 \
	\cf3 );\cf2 \
	\
	noiseAddition = \
		\cf4 SinOsc\cf3 .\cf2 ar\cf3 (\cf2 \
			freq: amount\cf3 .\cf2 linlin\cf3 (\cf6 0\cf3 ,\cf2  \cf6 1\cf3 ,\cf2  \cf6 2\cf3 ,\cf2  \cf6 50\cf3 ),\cf2 \
			mul: amount*\cf6 0.42 \cf2 \
		\cf3 )\cf2 \
		+ \cf4 LPF\cf3 .\cf2 ar\cf3 (\cf2  \
			\cf4 WhiteNoise\cf3 .\cf2 ar\cf3 (\cf2 amount\cf3 ),\cf2 \
			freq: amount\cf3 .\cf2 linlin\cf3 (\cf6 0\cf3 ,\cf2  \cf6 1\cf3 ,\cf2  \cf6 2\cf3 ,\cf2  \cf6 30\cf3 )\cf2 \
		\cf3 );\cf2 \
	\
	fade = \cf4 IEnvGen\cf3 .\cf2 kr\cf3 (\cf4 Env\cf3 ([\cf6 0\cf3 ,\cf2  \cf6 1\cf3 ,\cf2  \cf6 1\cf3 ],[\cf6 0.2\cf3 ,\cf2  \cf6 0.8\cf3 ]),\cf2  amount\cf3 ).\cf2 linlin\cf3 (\cf6 0\cf3 ,\cf2  \cf6 1\cf3 ,\cf2  \cf6 -1\cf3 ,\cf2  \cf6 1\cf3 );\cf2 \
	\
	sig = \cf4 PlayBuf\cf3 .\cf2 ar\cf3 (\cf6 2\cf3 ,\cf2  b\cf3 ,\cf2  rate:\cf6 0.5\cf3 ,\cf2  loop:\cf6 1\cf3 );\cf2 \
	sig = \cf4 LPF\cf3 .\cf2 ar\cf3 (\cf2 \
		\cf4 Compander\cf3 .\cf2 ar\cf3 (\cf2 sig\cf3 ,\cf2  sig\cf3 ,\cf2  \cf6 0.1\cf3 ,\cf2  \cf6 1.0\cf3 ,\cf2  \cf6 0.05\cf3 )\cf2 *\cf6 10\cf3 ,\cf2 \
		amount\cf3 .\cf2 range\cf3 (\cf6 500\cf3 ,\cf2  \cf6 1000\cf3 )\cf2 \
	\cf3 )\cf2  + \cf3 (\cf2 noiseAddition * \cf6 0.4\cf3 );\cf2 \
	\
	amp = \cf4 Amplitude\cf3 .\cf2 ar\cf3 (\cf2 sig\cf3 ,\cf2  ampSmooth\cf3 ,\cf2  ampSmooth\cf3 );\cf2 \
	\
	filteredSig = filterFreqs\cf3 .\cf2 sum\cf3 (\{\cf2 \
		\cf8 | f |\cf2 \
		rq = amount\cf3 .\cf2 linexp\cf3 (\cf6 0\cf3 ,\cf2  \cf6 1\cf3 ,\cf2  f/\cf6 2\cf3 ,\cf2  \cf6 0.001\cf3 )\cf2  / f \cf3 ;\cf2 \
		\cf4 BBandPass\cf3 .\cf2 ar\cf3 (\cf4 BBandPass\cf3 .\cf2 ar\cf3 (\cf2 sig\cf3 ,\cf2  f\cf3 ,\cf2  rq\cf3 ),\cf2  f\cf3 ,\cf2  rq\cf3 );\cf2 \
	\cf3 \});\cf2 \
	\
	filteredSigAmp = max\cf3 (\cf6 0.000001\cf3 ,\cf2  \cf4 Amplitude\cf3 .\cf2 ar\cf3 (\cf2 filteredSig\cf3 ,\cf2  ampSmooth\cf3 ,\cf2  ampSmooth\cf3 ));\cf2 \
	\
	filteredSig = filteredSig * min\cf3 (\cf6 20000\cf3 ,\cf2  \cf3 (\cf2 amp / filteredSigAmp\cf3 ));\cf2 \
	filteredSig = filteredSig + noiseAddition\cf3 ;\cf2 \
	filteredSig = \cf4 Compander\cf3 .\cf2 ar\cf3 (\cf2 filteredSig\cf3 ,\cf2  filteredSig\cf3 ,\cf2  \
		thresh: \cf6 0.6\cf3 ,\cf2 \
		slopeBelow: \cf6 0.8\cf3 ,\cf2 \
		slopeAbove: \cf6 0.001\cf2 \
	\cf3 );\cf2 \
	\
	\cf4 Out\cf3 .\cf2 ar\cf3 (out,\cf2  filteredSig.postln\cf3 );\cf2 \
\cf3 \};\cf2 \
\
k\cf3 .\cf2 setLag\cf3 (\cf9 \\knob1\cf3 ,\cf2  0.1);\
\cf0 k\cf10 .\cf0 setSpec\cf10 (\cf11 \\knob1\cf10 ,\cf0  [0.01, 1].asSpec);\
\cf2 \
\cf0 k\cf10 .\cf0 setLag\cf10 (\cf11 \\slider1\cf10 ,\cf0  3);\
k\cf10 .\cf0 setSpec\cf10 (\cf11 \\slider1\cf10 ,\cf0  [0.01, 2.5].asSpec);\
\cf2 \
\
n\cf3 .\cf2 fadeTime = \cf6 10\cf3 ;\cf2 \
n\cf3 .\cf2 map\cf3 (\cf9 \\ampSmooth\cf3 ,\cf2  \cf4 BusPlug\cf3 .\cf2 for\cf3 (\cf2 k\cf3 .\cf2 asBus\cf3 (\cf9 \\knob1\cf3 )));\cf2 \
n\cf3 .\cf2 map\cf3 (\cf9 \\fMult\cf3 ,\cf2  \cf12 BusPlug\cf10 .\cf0 for\cf10 (\cf0 k\cf10 .\cf0 asBus\cf10 (\cf11 \\slider1\cf10 ))\cf3 );\cf2 \
\
\
s\cf3 .\cf2 sendMsg\cf3 (\cf6 10\cf3 ,\cf2  \cf6 1002\cf3 )}