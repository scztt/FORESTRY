{\rtf1\ansi\ansicpg1252\cocoartf1138
{\fonttbl\f0\fnil\fcharset0 LucidaSans;\f1\fnil\fcharset0 LucidaSans-Demi;}
{\colortbl;\red255\green255\blue255;\red0\green102\blue0;\red0\green0\blue0;\red128\green0\blue0;
\red0\green0\blue179;\red102\green0\blue102;\red179\green0\blue179;\red0\green0\blue179;\red128\green0\blue0;
\red179\green0\blue179;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs22 \cf2 /* Not used\
	s = Server.internal.boot;\
	p = Dictionary.new;\
*/\cf3 \
\
 \cf2 // Execute one time\cf3 \
(\
	p[\cf4 \\buzz\cf3 ] = \cf5 DualEnvir\cf3 .new(s, \cf6 "buzz"\cf3 );\
	p[\cf4 \\buzz\cf3 ].push.linkDoc;\
	\cf5 Document\cf3 .current.proxyBold;\
)\
\
b = \cf5 Buffer\cf3 .alloc(s, \cf7 44100\cf3 );\
\

\f1\b ~buzz
\f0\b0 .clear\
\cf5 SynthDef\cf3 (\cf4 \\buzz\cf3 , \{\
	\cf5 | freq=310, lag=8, gate=1, filtMax=2, gain1=1.1 |\cf3 \
	\cf5 var\cf3  sig, mod, env, filtEnv;\
	env = \cf5 EnvGen\cf3 .ar( \cf5 Env\cf3 .adsr(\cf7 2\cf3 ,\cf7 0.5\cf3 ,\cf7 1\cf3 ,\cf7 8\cf3 ), gate, doneAction:\cf7 2 \cf3 );\
	filtEnv = \cf5 EnvGen\cf3 .ar( \cf5 Env\cf3 .adsr(\cf7 0.1\cf3 ,\cf7 0.5\cf3 ,\cf7 1\cf3 ,\cf7 8\cf3 ), gate, levelBias:\cf7 1000\cf3 , levelScale:filtMax*\cf7 1000  \cf3 );\
	mod = \cf5 SinOsc\cf3 .ar(freq/[\cf7 9\cf3 ,\cf7 10\cf3 ,\cf7 11\cf3 ,\cf7 8\cf3 ,\cf7 12\cf3 ]);\
	freq = \cf5 Lag2\cf3 .kr( freq, \cf7 8 \cf3 );\
	sig = ( \cf5 LFPulse\cf3 .ar(freq * [\cf7 1\cf3 ,\cf7 1.01\cf3 ,\cf7 1.022\cf3 ,\cf7 0.995\cf3 ,\cf7 1.333\cf3 ], mod, \cf7 0.1\cf3 ) ).sum;\
	sig = \cf5 MoogFF\cf3 .ar( sig, filtEnv, \cf7 2 \cf3 );\
	sig = \cf5 Mirror\cf3 .ar( sig*(gain1+env) );\
	sig = \cf5 MoogFF\cf3 .ar( sig, filtEnv, \cf7 2 \cf3 );	\
	sig = sig * [\cf7 0.1\cf3 ,\cf7 0.1\cf3 ] * env;\
	\cf5 Out\cf3 .ar( \cf7 10\cf3 , sig );\
\cf2 //	Out.ar( [0,1], sig );\cf3 \
\}).add;\
\
\cf5 SynthDef\cf3 ( \cf4 \\highDelay\cf3 , \{\
	\cf5 | in |\cf3 \
	\cf5 var\cf3  sig, delayed;\
	sig = \cf5 LeakDC\cf3 .ar( \cf5 In\cf3 .ar( in, \cf7 1 \cf3 ) + (\cf5 LocalIn\cf3 .ar(\cf7 1\cf3 )*\cf7 0.4\cf3 ) );\
	sig = \cf5 HPF\cf3 .ar( sig, \cf7 8000 \cf3 );\
	delayed = \cf5 MultiTap\cf3 .ar( \
		[\cf7 0.1\cf3 , \cf7 0.3\cf3 , \cf7 0.4\cf3 , \cf7 0.6\cf3 , \cf7 0.7\cf3 ].collect(\{ \cf5 |i|\cf3  i+\cf7 0.02\cf3 .rand \}),\
		[\cf7 0.8\cf3 , \cf7 0.7\cf3 , \cf7 0.5\cf3 , \cf7 0.3\cf3 , \cf7 0.1\cf3 ],\
		in: sig,\
		bufnum: b.bufnum );\
	\cf5 LocalOut\cf3 .ar( delayed );\
	\cf5 Out\cf3 .ar( [\cf7 0\cf3 ,\cf7 1\cf3 ], delayed );\
\}).add;\
\
g = \cf5 Group\cf3 (s);\
e = \cf5 Group\cf3 (g, \cf4 \\addAfter\cf3  );\
\
n = \cf5 Synth\cf3 ( \cf4 \\highDelay\cf3 , [\cf4 \\in\cf3 , \cf7 10\cf3 ], target:e)\
\
n = \cf5 Synth\cf3 ( \cf4 \\buzz\cf3 , [\cf4 \\freq\cf3 , \cf7 86\cf3 .midicps, \cf4 \\filtMax\cf3 ,\cf7 8\cf3 ], target:g)\
n = \cf5 Synth\cf3 ( \cf4 \\buzz\cf3 , [\cf4 \\freq\cf3 , \cf7 41\cf3 .midicps, \cf4 \\filtMax\cf3 , \cf7 1\cf3 ], target:g)\
n = \cf5 Synth\cf3 ( \cf4 \\buzz\cf3 , [\cf4 \\freq\cf3 , \cf7 50\cf3 .midicps, \cf4 \\filtMax\cf3 , \cf7 9\cf3 ], target:g)\
\cf0 n = \cf8 Synth\cf0 ( \cf9 \\buzz\cf0 , [\cf9 \\freq\cf0 , \cf10 46\cf0 .midicps, \cf9 \\filtMax\cf0 , \cf10 12\cf0 ], target:g)\
\cf3 \
n.set( \cf4 \\freq\cf3 , \cf7 35\cf3 .midicps, \cf4 \\lag\cf3 , \cf7 40\cf3 )\
g.set( \cf4 \\gate\cf3 , \cf7 0\cf3 )\
\
\cf5 \

\f1\b \cf3 ~buzz
\f0\b0 .free\

\f1\b ~buzz
\f0\b0 .play}